<?php
//======================================================================//
//== About art_has_pho.class.php
//==--------------------------------------------------------------------//
//== This file is generated by mysql.class.php of puppets library.
//== Copyright (c) 2009-2011 - MAQPRINT
//== Licensed under the GPL version 2.0 license.
//== See LICENSE file or
//== http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
//==--------------------------------------------------------------------//
//== Contributor : Erwan LE LOSTEC
//== Contributor : Patrick PERONNY
//======================================================================//
class art_has_pho
{/** @class art_has_pho
  * @brief art_has_pho table management.
  * Provides different methods for read and write in a art_has_pho table.
  **/
	public $artpho_id;
	public $art_id;
	public $pho_id;
	public $artpho_order;
	public $artpho_type;

	private $mysql;

	public function __construct($artpho_id = null)
	{/** @function art_has_pho()
	  * Create a new art_has_pho object.
	  *
	  * @param	artpho_id		<int(11)>	the id of art_has_pho to load
	  *
	  * @return	<boolean>
	  **/
		global $mysql;

		$this->mysql	= $mysql;

		$this->artpho_id	= $this->mysql->secure($artpho_id);
		$this->art_id	= null;
		$this->pho_id	= null;
		$this->artpho_order	= null;
		$this->artpho_type	= null;
		if($artpho_id != null)
		{
			$req_art_has_pho = $this->mysql->query("SELECT * FROM art_has_pho WHERE artpho_id='".$this->artpho_id."' LIMIT 1;");
			if($req_art_has_pho->numRows() > 0)
			{
				$obj_art_has_pho = $req_art_has_pho->fetchRow();
				$this->artpho_id	= $obj_art_has_pho->artpho_id;
				$this->art_id	= $obj_art_has_pho->art_id;
				$this->pho_id	= $obj_art_has_pho->pho_id;
				$this->artpho_order	= $obj_art_has_pho->artpho_order;
				$this->artpho_type	= $obj_art_has_pho->artpho_type;
			}
			else
			{
				error_log("Error while loading art_has_pho, there no art_has_pho of id : $artpho_id.");
				throw new Exception("Error while loading art_has_pho, there no art_has_pho of id : $artpho_id.");
				return false;
			};
		}
		return true;
	}
	public function save()
	{/** @function save()
	 * Insert or update a art_has_pho.
	 *
	 * @return	<mixed>		return false or the id of inserted/updated art_has_pho.
	 **/
		$flag_error = false;

		$this->mysql->beginTransactions();

		if(empty($this->artpho_id))
		{//-- Insert
			if(!$this->mysql->query("INSERT INTO art_has_pho (art_id, pho_id, artpho_order, artpho_type)
									VALUES (".$this->mysql->secure($this->art_id).", ".$this->mysql->secure($this->pho_id).", ".$this->mysql->secure($this->artpho_order).", '".$this->mysql->secure($this->artpho_type)."');")) { $flag_error = true; };
			$this->artpho_id = $this->mysql->lastInsertId();
		}
		else
		{//-- Update
			if(!$this->mysql->query("UPDATE art_has_pho SET art_id='".$this->mysql->secure($this->art_id)."', pho_id='".$this->mysql->secure($this->pho_id)."', artpho_order='".$this->mysql->secure($this->artpho_order)."', artpho_type='".$this->mysql->secure($this->artpho_type)."'
									WHERE artpho_id=".$this->mysql->secure($this->artpho_id).";")) { $flag_error = true; };
		}

		$this->mysql->endTransactions($flag_error);

		if($flag_error)
		{
			error_log("Error while inserting/updating the art_has_pho.");
			throw new Exception("Error while inserting/updating the art_has_pho.");
			return false;
		}
		else
		{
			return $this->artpho_id;
		};
	}
	public static function delete($artpho_id)
	{/** @function delete()
	 * Delete the art_has_pho.
	 *
	 * @param	artpho_id	<int(11)>	the id of the art_has_pho to delete
	 *
	 * @return	<boolean>
	 **/
		global $mysql;

		$flag_error = false;

		$mysql->beginTransactions();

		if(!$mysql->query("DELETE FROM art_has_pho WHERE artpho_id=".$mysql->secure($artpho_id).";")) { $flag_error = true; };

		$mysql->endTransactions($flag_error);

		if($flag_error)
		{
			error_log("Error while deleting the art_has_pho. - DELETE FROM art_has_pho WHERE artpho_id=".$mysql->secure($artpho_id));
			throw new Exception("Error while deleting the art_has_pho.");
			return false;
		}
		else
		{
			return true;
		};
	}

	public static function getLastOrder($art_id)
	{
		global $mysql;
		if (!empty($art_id))
		{
			$req_last = $mysql->query("SELECT artpho_order FROM art_has_pho WHERE art_id='".$mysql->secure($art_id)."' ORDER BY artpho_order DESC LIMIT 1");
			if($req_last->numRows() > 0)
			{
				$obj_last = $req_last->fetchRow();
				return $obj_last->artpho_order;
			} else
			{
				return 0;
			}
		} else
		{
			return false;
		}
	}

	public static function order($list_id=array())
	{
		global $mysql;
		if(count($list_id)>0)
		{
			foreach($list_id as $position => $artpho_id)
			{
				$pos = $position+1;
				$sql[] = $mysql->query("UPDATE art_has_pho SET artpho_order = '".$pos."' WHERE artpho_id = '".$artpho_id."' ");
			}
			return ($sql);
		}
		else
		{
			return false;
		}
	}

	public static function exists($artpho_id=null, $art_id=null, $pho_id=null)
	{
		global $mysql;
		if(!empty($pho_id) && !empty($art_id))
		{
			$req_exists = $mysql->query("SELECT artpho_id FROM art_has_pho WHERE art_id='".$mysql->secure($art_id)."' and pho_id='".$mysql->secure($pho_id)."' LIMIT 1");
			if($req_exists->numRows() > 0)
			{
				$obj_exists = $req_exists->fetchRow();
				return $obj_exists->artpho_id;
			}
			else
			{
				return false;
			}
		}
		return false;
	}
}
?>