<?php
class artistes
{/** @class artistes
  * @brief artistes table management.
  * Provides different methods for read and write in a artistes table.
  **/
	public $art_id;
	public $art_name;
	public $art_description_fr;
	public $art_description_en;
	public $art_homepage;
	public $photos;
	public $releases;

	private $mysql;

	public function __construct($art_id = null)
	{/** @function artistes()
	  * Create a new artistes object.
	  * 
	  * @param	art_id		<int(11)>	the id of artistes to load
	  * 
	  * @return	<boolean>
	  **/
		global $mysql;

		$this->mysql	= $mysql;

		$this->art_id			= $this->mysql->secure($art_id);
		$this->art_name			= null;
		$this->art_description_fr	= null;
		$this->art_description_en	= null;
		$this->art_homepage		= null;
		if($art_id != null)
		{
			$RqArtistes = $this->mysql->query("SELECT * FROM artistes WHERE art_id='".$this->mysql->secure($art_id)."';");
			if($RqArtistes->numRows() > 0)
			{
				$objArtistes 			= $RqArtistes->fetchRow();
				$this->art_id			= $objArtistes->art_id;
				$this->art_name			= $objArtistes->art_name;
				$this->art_description_fr	= $objArtistes->art_description_fr;
				$this->art_description_en	= $objArtistes->art_description_en;
				$this->art_homepage		= $objArtistes->art_homepage;
				$this->photos			= $this->getPhotos();
				//$this->releases			= $this->getReleases();
			}
			else { throw new Exception("Error while loading artistes, there no artistes of id : $art_id."); return false; };
		}
		return true;
	}
	public function save()
	{/** @function save()
	 * Insert or update a artistes.
	 *
	 * @return	<mixed>		return false or the id of inserted/updated artistes.
	 **/
		$flag_error = false;

		$this->mysql->beginTransactions();

		if(empty($this->art_id))
		{//-- Insert
			if(!$this->mysql->query("INSERT INTO artistes (art_name, art_description_fr, art_description_en, art_homepage)
									VALUES ('".$this->mysql->secure($this->art_name)."', '".$this->mysql->secure($this->art_description_fr)."', '".$this->mysql->secure($this->art_description_en)."', '".$this->mysql->secure($this->art_homepage)."');")) { $flag_error = true; };
			$this->art_id = $this->mysql->lastInsertId();
		}
		else
		{//-- Update
			if(!$this->mysql->query("UPDATE artistes SET art_name='".$this->mysql->secure($this->art_name)."', art_description_fr='".$this->mysql->secure($this->art_description_fr)."', art_description_en='".$this->mysql->secure($this->art_description_en)."', art_homepage='".$this->mysql->secure($this->art_homepage)."'
									WHERE art_id=".$this->mysql->secure($this->art_id).";")) { $flag_error = true; };
		}

		$this->mysql->endTransactions($flag_error);

		if($err_flag) 	{ throw new Exception("Error while inserting/updating the artistes."); return false; }
		else 			{ return $this->art_id; };
	}
	public static function delete($art_id)
	{/** @function delete()
	 * Delete the artistes.
	 *
	 * @param	art_id	<int(11)>	the id of the artistes to delete
	 *
	 * @return	<boolean>
	 **/
		global $mysql;

		$flag_error = false;

		$mysql->beginTransactions();

		if(!$mysql->query("DELETE FROM artistes WHERE art_id=".$mysql->secure($art_id).";")) { $flag_error = true; };

		$mysql->endTransactions($flag_error);

		if($err_flag) 	{ throw new Exception("Error while deleting the artistes."); return false; }
		else 			{ return true; };
	}
	
	public static function getAll()
	{
		global $mysql;
		
		$req_all = $mysql->query("SELECT * FROM artistes ORDER BY art_name ASC");
		$arts = array();
		while($obj_all = $req_all->fetchRow())
		{
			$arts[] = $obj_all->art_id;
		}
		return $arts;
	}
	
	public function getPhotos()
	{
		$req_pho = $this->mysql->query("SELECT * FROM art_has_pho WHERE art_id='".$this->art_id."' ORDER BY artpho_order ASC");
		$phos = array();
		while($obj_pho = $req_pho->fetchRow())
		{
			$phos[$obj_pho->artpho_type] = array(
				"artpho_id" => $obj_pho->artpho_id,
				"pho_id" => $obj_pho->pho_id
			);
		}
		return $phos;
	}
	
	public function getReleases()
	{
		$req_rel = $this->mysql->query("SELECT * FROM art_has_rel WHERE art_id='".$this->art_id."' ORDER BY artrel_order DESC");
		$rels = array();
		while($obj_rel = $req_rel->fetchRow())
		{
			$rels[] = array(
				"artrel_id" => $obj_rel->artrel_id,
				"rel_id" => $obj_rel->rel_id
			);
		}
		return $rels;
	}
	
	public static function exists($art_id)
	{
		global $mysql;
		
		$RqArtistes = $mysql->query("SELECT * FROM artistes WHERE art_id='".$mysql->secure($art_id)."';");
		if($RqArtistes->numRows() > 0)
		{
			return true;
		} else
		{
			return false;
		}
	}
}
?>