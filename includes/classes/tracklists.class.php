<?php
//======================================================================//
//== About tracklists.class.php
//==--------------------------------------------------------------------//
//== This file is generated by mysql.class.php of puppets library.
//== Copyright (c) 2009-2011 - MAQPRINT
//== Licensed under the GPL version 2.0 license.
//== See LICENSE file or
//== http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
//==--------------------------------------------------------------------//
//== Contributor : Erwan LE LOSTEC
//== Contributor : Patrick PERONNY
//======================================================================//
class tracklists
{/** @class tracklists
  * @brief tracklists table management.
  * Provides different methods for read and write in a tracklists table.
  **/
	public $tra_id;
	public $tra_digit;
	public $tra_name;
	public $tra_url;
	public $tra_order;
	public $rel_id;

	private $mysql;

	public function __construct($tra_id = null)
	{/** @function tracklists()
	  * Create a new tracklists object.
	  * 
	  * @param	tra_id		<int(11)>	the id of tracklists to load
	  * 
	  * @return	<boolean>
	  **/
		global $mysql;

		$this->mysql	= $mysql;

		$this->tra_id	= $this->mysql->secure($tra_id);
		$this->tra_digit	= null;
		$this->tra_name	= null;
		$this->tra_url	= null;
		$this->tra_order	= 1;
		$this->rel_id	= null;
		if($tra_id != null)
		{
			$req_tracklists = $this->mysql->query("SELECT * FROM tracklists WHERE tra_id='".$this->tra_id."' LIMIT 1;");
			if($req_tracklists->numRows() > 0)
			{
				$obj_tracklists = $req_tracklists->fetchRow();
				$this->tra_id	= $obj_tracklists->tra_id;
				$this->tra_digit	= $obj_tracklists->tra_digit;
				$this->tra_name	= $obj_tracklists->tra_name;
				$this->tra_url	= $obj_tracklists->tra_url;
				$this->tra_order	= $obj_tracklists->tra_order;
				$this->rel_id	= $obj_tracklists->rel_id;
			}
			else
			{
				error_log("Error while loading tracklists, there no tracklists of id : $tra_id.");
				throw new Exception("Error while loading tracklists, there no tracklists of id : $tra_id.");
				return false; 
			};
		}
		return true;
	}
	public function save()
	{/** @function save()
	 * Insert or update a tracklists.
	 *
	 * @return	<mixed>		return false or the id of inserted/updated tracklists.
	 **/
		$flag_error = false;

		$this->mysql->beginTransactions();

		if(empty($this->tra_id))
		{//-- Insert
			if(!$this->mysql->query("INSERT INTO tracklists (tra_digit, tra_name, tra_url, tra_order, rel_id)
									VALUES ('".$this->mysql->secure($this->tra_digit)."', \"".$this->mysql->secure($this->tra_name)."\", '".$this->mysql->secure($this->tra_url)."', ".$this->mysql->secure($this->tra_order).", ".$this->mysql->secure($this->rel_id).");")) { $flag_error = true; };
			$this->tra_id = $this->mysql->lastInsertId();
		}
		else
		{//-- Update
			if(!$this->mysql->query("UPDATE tracklists SET tra_digit='".$this->mysql->secure($this->tra_digit)."', tra_name=\"".$this->mysql->secure($this->tra_name)."\", tra_url='".$this->mysql->secure($this->tra_url)."', tra_order='".$this->mysql->secure($this->tra_order)."', rel_id='".$this->mysql->secure($this->rel_id)."'
									WHERE tra_id=".$this->mysql->secure($this->tra_id).";")) { $flag_error = true; };
		}

		$this->mysql->endTransactions($flag_error);

		if($flag_error)
		{
			error_log("Error while inserting/updating the tracklists.");
			throw new Exception("Error while inserting/updating the tracklists.");
			return false;
		}
		else
		{
			return $this->tra_id;
		};
	}
	public static function delete($tra_id)
	{/** @function delete()
	 * Delete the tracklists.
	 *
	 * @param	tra_id	<int(11)>	the id of the tracklists to delete
	 *
	 * @return	<boolean>
	 **/
		global $mysql;

		$flag_error = false;

		$mysql->beginTransactions();

		if(!$mysql->query("DELETE FROM tracklists WHERE tra_id=".$mysql->secure($tra_id).";")) { $flag_error = true; };

		$mysql->endTransactions($flag_error);

		if($flag_error)
		{
			error_log("Error while deleting the tracklists. - DELETE FROM tracklists WHERE tra_id=".$mysql->secure($tra_id));
			throw new Exception("Error while deleting the tracklists.");
			return false;
		}
		else
		{
			return true;
		};
	}
	
	public static function getLastOrder()
	{
		global $mysql;
		$req_order = $mysql->query("SELECT tra_order FROM tracklists ORDER BY tra_order DESC LIMIT 1");
		$tra_order = 0;
		if($req_order->numRows() > 0)
		{
			$obj_order = $req_order->fetchRow();
			$tra_order = $obj_order->tra_order;
		}
		return $tra_order;
	}
}
?>