<?php
//======================================================================//
//== About sub_labels.class.php
//==--------------------------------------------------------------------//
//== This file is generated by mysql.class.php of puppets library.
//== Copyright (c) 2009-2011 - MAQPRINT
//== Licensed under the GPL version 2.0 license.
//== See LICENSE file or
//== http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
//==--------------------------------------------------------------------//
//== Contributor : Erwan LE LOSTEC
//== Contributor : Patrick PERONNY
//======================================================================//
class sub_labels
{/** @class sub_labels
  * @brief sub_labels table management.
  * Provides different methods for read and write in a sub_labels table.
  **/
	public $sublab_id;
	public $sublab_name;
	public $sublab_description_fr;
	public $sublab_description_en;

	private $mysql;

	public function __construct($sublab_id = null)
	{/** @function sub_labels()
	  * Create a new sub_labels object.
	  * 
	  * @param	sublab_id		<int(11)>	the id of sub_labels to load
	  * 
	  * @return	<boolean>
	  **/
		global $mysql;

		$this->mysql	= $mysql;

		$this->sublab_id	= $this->mysql->secure($sublab_id);
		$this->sublab_name	= null;
		$this->sublab_description_fr	= null;
		$this->sublab_description_en	= null;
		if($sublab_id != null)
		{
			$req_sub_labels = $this->mysql->query("SELECT * FROM sub_labels WHERE sublab_id='".$this->sublab_id."' LIMIT 1;");
			if($req_sub_labels->numRows() > 0)
			{
				$obj_sub_labels = $req_sub_labels->fetchRow();
				$this->sublab_id	= $obj_sub_labels->sublab_id;
				$this->sublab_name	= $obj_sub_labels->sublab_name;
				$this->sublab_description_fr	= $obj_sub_labels->sublab_description_fr;
				$this->sublab_description_en	= $obj_sub_labels->sublab_description_en;
			}
			else
			{
				error_log("Error while loading sub_labels, there no sub_labels of id : $sublab_id.");
				throw new Exception("Error while loading sub_labels, there no sub_labels of id : $sublab_id.");
				return false; 
			};
		}
		return true;
	}
	public function save()
	{/** @function save()
	 * Insert or update a sub_labels.
	 *
	 * @return	<mixed>		return false or the id of inserted/updated sub_labels.
	 **/
		$flag_error = false;

		$this->mysql->beginTransactions();

		if(empty($this->sublab_id))
		{//-- Insert
			if(!$this->mysql->query("INSERT INTO sub_labels (sublab_name, sublab_description_fr, sublab_description_en)
									VALUES ('".$this->mysql->secure($this->sublab_name)."', '".$this->mysql->secure($this->sublab_description_fr)."', '".$this->mysql->secure($this->sublab_description_en)."');")) { $flag_error = true; };
			$this->sublab_id = $this->mysql->lastInsertId();
		}
		else
		{//-- Update
			if(!$this->mysql->query("UPDATE sub_labels SET sublab_name='".$this->mysql->secure($this->sublab_name)."', sublab_description_fr='".$this->mysql->secure($this->sublab_description_fr)."', sublab_description_en='".$this->mysql->secure($this->sublab_description_en)."'
									WHERE sublab_id=".$this->mysql->secure($this->sublab_id).";")) { $flag_error = true; };
		}

		$this->mysql->endTransactions($flag_error);

		if($flag_error)
		{
			error_log("Error while inserting/updating the sub_labels.");
			throw new Exception("Error while inserting/updating the sub_labels.");
			return false;
		}
		else
		{
			return $this->sublab_id;
		};
	}
	public static function delete($sublab_id)
	{/** @function delete()
	 * Delete the sub_labels.
	 *
	 * @param	sublab_id	<int(11)>	the id of the sub_labels to delete
	 *
	 * @return	<boolean>
	 **/
		global $mysql;

		$flag_error = false;

		$mysql->beginTransactions();

		if(!$mysql->query("DELETE FROM sub_labels WHERE sublab_id=".$mysql->secure($sublab_id).";")) { $flag_error = true; };

		$mysql->endTransactions($flag_error);

		if($flag_error)
		{
			error_log("Error while deleting the sub_labels. - DELETE FROM sub_labels WHERE sublab_id=".$mysql->secure($sublab_id));
			throw new Exception("Error while deleting the sub_labels.");
			return false;
		}
		else
		{
			return true;
		};
	}
	
	public function getReleases()
	{
		$req_rel = $this->mysql->query("SELECT * FROM releases WHERE sublab_id='".$this->sublab_id."' ORDER BY rel_date DESC");
		$rels = array();
		while($obj_rel = $req_rel->fetchRow())
		{
			$rels[] = $obj_rel->rel_id;
		}
		return $rels;
	}
	
	public function getAll()
	{
		global $mysql;
		$req_all = $mysql->query("SELECT sublab_id FROM sub_labels ORDER BY sublab_name ASC");
		$labs = array();
		while($obj_all = $req_all->fetchRow())
		{
			$labs[] = $obj_all->sublab_id;
		}
		return $labs;
	}
}
?>